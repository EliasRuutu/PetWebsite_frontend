import * as React from "react";
import { useDispatch, useSelector } from "react-redux";
import { useNavigate } from "react-router-dom";
import { setPanelActiveState } from "../redux/client/clientSlice"

const LeftSidePanel = () => {
  let navigator = useNavigate();
  const dispatch = useDispatch();

  const [checked, setChecked] = React.useState([]);
  React.useEffect(() => {console.log("âœ…ðŸ™„âœ…", checked)},[checked]);

  const activeState = useSelector((state) => state.client.panelActiveState)

  React.useEffect(() => {
      if(activeState) {
      setChecked(activeState);
    }
  },[activeState]);
  return (
    <>
      <div className="flex w-1/6 border-r-2 h-screen flex-col ">
        <span className="w-full pt-8 text-xl border-t-2 flex justify-center hover:font-bold hover:cursor-pointer">
          <svg
            className="mr-4"
            width="30"
            height="30"
            viewBox="0 0 30 30"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              fill-rule="evenodd"
              clip-rule="evenodd"
              d="M6.96024 3.38572C8.30255 2.29478 9.85287 1.48846 11.5168 1.01589C13.1807 0.543311 14.9234 0.414362 16.6388 0.636893C18.3541 0.859424 20.0062 1.42878 21.4945 2.31028C22.9828 3.19179 24.276 4.36699 25.2955 5.76434C26.315 7.16168 27.0394 8.75192 27.4247 10.4382C27.8099 12.1245 27.8478 13.8716 27.5362 15.573C27.2246 17.2744 26.5699 18.8946 25.612 20.3349C24.6541 21.7752 23.4131 23.0054 21.9645 23.9507V23.0357C21.965 22.1494 21.6514 21.2915 21.0795 20.6143C22.5894 19.3634 23.6767 17.6773 24.1931 15.7858C24.7095 13.8943 24.6299 11.8896 23.965 10.045C23.3002 8.20047 22.0826 6.60587 20.4783 5.47874C18.8739 4.3516 16.961 3.74678 15.0002 3.74678C13.0395 3.74678 11.1266 4.3516 9.52221 5.47874C7.91786 6.60587 6.70025 8.20047 6.03544 10.045C5.37064 11.8896 5.291 13.8943 5.80739 15.7858C6.32379 17.6773 7.41107 19.3634 8.92096 20.6143C8.34906 21.2915 8.03552 22.1494 8.03596 23.0357V23.9507C6.35494 22.854 4.95668 21.3759 3.95502 19.6366C2.95337 17.8973 2.37664 15.946 2.2718 13.9416C2.16695 11.9372 2.53695 9.93642 3.35168 8.1021C4.1664 6.26778 5.40281 4.65179 6.96024 3.38572ZM18.8574 22.1786C18.9905 22.2784 19.0985 22.4078 19.1728 22.5566C19.2472 22.7053 19.286 22.8694 19.286 23.0357V26.25C19.286 26.4163 19.2472 26.5804 19.1728 26.7292C19.0985 26.8779 18.9905 27.0073 18.8574 27.1071L15.6431 29.5179C15.4576 29.657 15.2321 29.7322 15.0002 29.7322C14.7684 29.7322 14.5428 29.657 14.3574 29.5179L11.1431 27.1071C11.01 27.0073 10.902 26.8779 10.8276 26.7292C10.7533 26.5804 10.7145 26.4163 10.7145 26.25V23.0357C10.7145 22.8694 10.7533 22.7053 10.8276 22.5566C10.902 22.4078 11.01 22.2784 11.1431 22.1786L14.3574 19.7679C14.5428 19.6288 14.7684 19.5536 15.0002 19.5536C15.2321 19.5536 15.4576 19.6288 15.6431 19.7679L18.8574 22.1786Z"
              fill="#929292"
            />
          </svg>
          <h1 className={`font-['Poppins'] text-xl text-[#155263] ${checked && checked[0] ? 'font-bold' : ''}`} onClick={() => {navigator("/idtags"); dispatch(setPanelActiveState([true,false,false]));}}>Id Tags</h1>
        </span>
        <span className="w-full flex pt-5 text-xl justify-center items-center hover:font-bold hover:cursor-pointer ">
          <svg
            className="mr-4 "
            width="26"
            height="23"
            viewBox="0 0 26 23"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M19.6306 14.2189L19.6336 14.2205C20.4134 14.6442 21.0297 15.3157 21.3851 16.1289C21.7406 16.9421 21.8148 17.8505 21.5962 18.7106C21.3775 19.5707 20.8784 20.3334 20.1777 20.8781C19.4771 21.4228 18.6149 21.7184 17.7274 21.7182L17.7259 21.7182C17.1914 21.7196 16.6622 21.6125 16.1702 21.4035L16.1702 21.4034L16.1652 21.4014C14.1351 20.5646 11.8566 20.5646 9.82655 21.4014L9.82654 21.4013L9.82133 21.4035C9.33186 21.6118 8.80529 21.7188 8.27335 21.7182H8.27254C7.38447 21.7185 6.52165 21.4226 5.82068 20.8773C5.11971 20.3321 4.62064 19.5686 4.40247 18.7077C4.1843 17.8468 4.2595 16.9378 4.61616 16.1245C4.97282 15.3112 5.59057 14.6401 6.37161 14.2174L6.37162 14.2174L6.37568 14.2151C7.51332 13.5858 8.35442 12.5304 8.71408 11.281C8.98398 10.3533 9.54761 9.53821 10.3203 8.95817C11.0932 8.37797 12.0336 8.0643 13 8.0643C13.9664 8.0643 14.9068 8.37797 15.6797 8.95817C16.4525 9.53829 17.0162 10.3535 17.286 11.2814C17.4648 11.9009 17.7638 12.4791 18.1659 12.9831C18.5683 13.4872 19.066 13.9071 19.6306 14.2189ZM1.6434 10.8846L1.36561 11.3003L1.6434 10.8846C1.22031 10.6019 0.890562 10.2001 0.695839 9.72999C0.501115 9.25989 0.450166 8.7426 0.549436 8.24354C0.648705 7.74448 0.893733 7.28606 1.25354 6.92626C1.61334 6.56646 2.07175 6.32143 2.57081 6.22216C3.06987 6.12289 3.58716 6.17384 4.05727 6.36856C4.52737 6.56329 4.92918 6.89304 5.21187 7.31612C5.49457 7.73921 5.64546 8.23662 5.64546 8.74545C5.64546 9.42778 5.3744 10.0822 4.89192 10.5646C4.40944 11.0471 3.75506 11.3182 3.07273 11.3182C2.56389 11.3182 2.06648 11.1673 1.6434 10.8846ZM21.4979 6.60631C21.921 6.32362 22.4184 6.17273 22.9273 6.17273C23.6096 6.17273 24.264 6.44378 24.7465 6.92626C25.2289 7.40874 25.5 8.06312 25.5 8.74545C25.5 9.25429 25.3491 9.7517 25.0664 10.1748C24.7837 10.5979 24.3819 10.9276 23.9118 11.1223C23.4417 11.3171 22.9244 11.368 22.4254 11.2687C21.9263 11.1695 21.4679 10.9244 21.1081 10.5646C20.7483 10.2048 20.5033 9.74643 20.404 9.24737C20.3047 8.74831 20.3557 8.23102 20.5504 7.76091C20.7451 7.29081 21.0749 6.88901 21.4979 6.60631ZM10.1748 5.21187C9.7517 5.49457 9.25429 5.64545 8.74546 5.64545C8.06313 5.64545 7.40874 5.3744 6.92626 4.89192C6.44378 4.40944 6.17273 3.75506 6.17273 3.07273C6.17273 2.56389 6.32362 2.06648 6.60631 1.6434C6.88901 1.22032 7.29081 0.890562 7.76092 0.695839C8.23102 0.501115 8.74831 0.450166 9.24737 0.549436C9.74643 0.648705 10.2048 0.893733 10.5646 1.25354C10.9245 1.61334 11.1695 2.07175 11.2687 2.57081C11.368 3.06987 11.3171 3.58716 11.1223 4.05727C10.9276 4.52737 10.5979 4.92918 10.1748 5.21187ZM18.6839 5.21187C18.2608 5.49457 17.7634 5.64545 17.2545 5.64545C16.5722 5.64545 15.9178 5.3744 15.4354 4.89192C14.9529 4.40944 14.6818 3.75506 14.6818 3.07273C14.6818 2.56389 14.8327 2.06648 15.1154 1.6434C15.3981 1.22032 15.7999 0.890562 16.27 0.695839C16.7401 0.501115 17.2574 0.450166 17.7565 0.549436C18.2555 0.648705 18.7139 0.893733 19.0737 1.25354C19.4335 1.61334 19.6786 2.07175 19.7778 2.57081C19.8771 3.06987 19.8262 3.58716 19.6314 4.05727C19.4367 4.52737 19.107 4.92918 18.6839 5.21187Z"
              stroke="#929292"
            />
          </svg>

          <h1
            className={`font-['Poppins'] text-xl text-[#155263] ${checked && checked[1] ? 'font-bold' : ''}`}
            onClick={() =>{navigator("/assignedpetslist"); dispatch(setPanelActiveState([false, true, false]));}}
          >
            Mascotas
          </h1>
        </span>
        <span className="w-full flex pt-5 text-xl justify-center items-center hover:font-bold hover:cursor-pointer">
          <svg
            className="mr-5"
            width="26"
            height="26"
            viewBox="0 0 26 26"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M18.3476 6.09398C18.3476 9.04537 15.955 11.438 13.0036 11.438C10.0522 11.438 7.65967 9.04537 7.65967 6.09398C7.65967 3.14258 10.0522 0.75 13.0036 0.75C15.955 0.75 18.3476 3.14258 18.3476 6.09398Z"
              stroke="#929292"
              stroke-width="1.5"
              stroke-linecap="round"
            />
            <path
              d="M2.90307 17.1184C3.69323 15.6121 5.29313 14.8833 6.8924 14.8833H13.0041H19.1157C20.715 14.8833 22.3149 15.6121 23.1051 17.1184C23.928 18.6873 24.8854 21.1 25.0071 23.999C25.0354 24.6749 24.4861 25.2037 23.8405 25.2037H2.16761C1.52205 25.2037 0.97269 24.6749 1.00105 23.999C1.1227 21.1 2.08011 18.6873 2.90307 17.1184Z"
              stroke="#929292"
              stroke-width="1.5"
              stroke-linecap="round"
            />
          </svg>
          <h1
            className={`font-['Poppins'] text-xl text-[#155263] ${checked && checked[2] ? 'font-bold' : ''}`}
            onClick={() => {navigator("/balanceofclient");  dispatch(setPanelActiveState([false,false,true]));}}
          >
            Clientes
          </h1>
        </span>
      </div>
    </>
  );
};

export default LeftSidePanel;
